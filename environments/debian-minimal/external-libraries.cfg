# available constants:
# CC, CXX, F77, CXXFLAGS, BASEDIR, SRCDIR
# all commands are executed in $SRCDIR/$NAME

[eigen]
src=http://bitbucket.org/eigen/eigen/get/3.3.7.tar.gz
build='test -d build || mkdir build'
      'rm -rf build/*'
      'cd build && cmake .. -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=RELEASE'
      'cd build && make -j8'
      'cd build && make install'

[silence_dune_alugrid]
only_build=True
build='sed -i 's;std::cout <<;// std::cout <<;g' $BASEDIR/dune-alugrid/dune/alugrid/common/defaultindexsets.hh'
      'sed -i 's/const bool verbose = verb && this->comm().rank() == 0;/const bool verbose = false;\/\/verb && this->comm().rank() == 0;/g' $BASEDIR/dune-alugrid/dune/alugrid/3d/alugrid.hh'
      'sed -i 's;msg {{.*}};msg;g' $BASEDIR/dune-alugrid/dune/alugrid/impl/serial/walk.h'
      'sed -i 's|std::cerr << "WARNING (ignored): Could not open file|// std::cerr << "WARNING (ignored): Could not open file|g' $BASEDIR/dune-alugrid/dune/alugrid/impl/parallel/gitter_pll_sti.cc'
      'sed -i 's|std::cerr << _ldbUnder|// std::cerr << _ldbUnder|g' $BASEDIR/dune-alugrid/dune/alugrid/impl/parallel/gitter_pll_sti.cc'
      'sed -i 's|std::cout << dgfstream.str() << std::endl;|//std::cout << dgfstream.str() << std::endl;|' $BASEDIR/dune-alugrid/dune/alugrid/common/structuredgridfactory.hh'

[boost]
src=https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.gz
build='./bootstrap.sh --with-python=python3 --prefix=$INSTALL_PREFIX --with-libraries=atomic,chrono,date_time,filesystem,python,system,thread,timer'
      './b2 -j8 cxxstd=14 cxxflags=-fPIC install'
